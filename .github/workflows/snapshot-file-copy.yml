name: 'pmap-snapshot-file-copy'
on:
  workflow_call:
    inputs:
      workload_identity_provider:
        description: 'The full identifier of the Workload Identity Provider, including the project number, pool name, and provider name.'
        type: 'string'
        required: true
      service_account:
        description: 'Email address or unique identifier of the Google Cloud service account for which to generate credentials.'
        type: 'string'
        required: true
      gcs_dst_url_prefix:
        description: 'The destination prefix for the file/folder in the form bucket-name or with an optional prefix in the form bucket-name/prefix.'
        type: 'string'
        required: true
      resource_mappings_path:
        description: 'The path to a file or folder contains the resource mappings yaml files in the GitHub repo that should be uploaded to the gcs.'
        type: 'string'
        required: true

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    name: 'Snapshot changed files'
    steps:
      - uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' # ratchet:actions/checkout@v3
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ inputs.workload_identity_provider }}'
          service_account: '${{ inputs.service_account }}'
      - name: 'Set current timestamp'
        run: |
          echo "CUR_TIMESTAMP=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: 'GCS upload files'
        id: 'gcs-upload-file'
        uses: 'google-github-actions/upload-cloud-storage@a5b77a3bf84da1791719585d327e5f90ae5cb53c' # ratchet:google-github-actions/upload-cloud-storage@v1
        with:
          path: '${{ inputs.resource_mappings_path }}'
          destination: '${{ inputs.gcs_dst_url_prefix }}/${{ env.CUR_TIMESTAMP }}'
          glob: '**/*.yaml'
      - name: 'List all uploaded files'
        run: |-
          echo "all gcs uploaded files"
          echo ${{ steps.gcs-upload-file.outputs.uploaded }}

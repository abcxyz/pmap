// Copyright 2023 The Authors (see AUTHORS file)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package abcxyz.pmap;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
option go_package = "github.com/abcxyz/pmap/apis/v1alpha1";

// A ResourceMapping can be any resource in the GCP or non-GCP services.
message ResourceMapping {
  // Required. Resource that identifies the resource described by the ResourceMapping.
  Resource resource = 1;
  // Required. Contacts for the ResourceMapping.
  Contacts contacts = 2;
  // Optional. A map of key (string), value (any type) pairs that annotates the resource. Example:
  // {
  //  "retentionPlanId":  "611498",
  //  "iamPolicy": {
  //      "bindings": [
  //        {
  //          "role": "roles/pubsub.publisher",
  //          "members": [XXXX],
  //        }
  //      ]
  //    },
  // }
  google.protobuf.Struct annotations = 3;
}

// Identification of the ResourceMapping.
message Resource {
  // Required. Describe the provider of the resource. Example: `gcp`
  string provider = 1;

  // Required. The full resource name. Example:
  // `//spanner.googleapis.com/projects/p1/instances/i1/databases/d1`
  string name = 2;

  // Optional. The representation for subresource in the format of a URL. 
  // Subscope is the resource that beyonds cloud resource level.
  // like spanner table, GCS object.
  // Format: "[HIERARCHY]?[QUALIFIERS]"
  // where HIERARCHY represents the hierarchy of the subresource
  // to its parent in the format of parent/foo/child/bar.
  // and QUALIFIERS represents the additional information of
  // the subresource in the format of: key1=value1&key2=value2.
  // the keys and values should be in alphabetical order.
  // 
  // Example: rows with userid=abcxyz in a database table1 would be: 
  // `table/table1?userid=abcxyz`
  string subscope = 3;
}

// Contacts.
message Contacts {
  // Required. Email of the person in the format of `john.doe@xyz`,
  repeated string email = 1;
}
